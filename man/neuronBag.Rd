% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neuronBag.R
\name{neuronBag}
\alias{neuronBag}
\title{Create a neuronBag}
\usage{
neuronBag(
  typeQuery,
  fixed = FALSE,
  by.roi = TRUE,
  selfRef = FALSE,
  verbose = FALSE,
  omitInputs = FALSE,
  omitOutputs = FALSE,
  computeKnownRatio = FALSE,
  renaming = NULL,
  ...
)
}
\arguments{
\item{typeQuery}{Either a vector of queries (similar to a \code{getTypesTable} queries) or a
metadata \code{data.frame} for a set of neurons. If a \code{data.frame} it needs to contain all the
instances of the types.}

\item{fixed}{If typeQuery is a query string, is it fixed?}

\item{by.roi}{Return results by ROI or just global weights?}

\item{selfRef}{Deprecated argument}

\item{verbose}{Inform about progress if TRUE}

\item{omitInputs}{Skip calculation of inputs if TRUE}

\item{omitOutputs}{Skip calculation of outputs if TRUE}

\item{computeKnownRatio}{Computes relative weights and output contributions that sum to 1 (for types and for neurons).
This requires keeping track of all the outputs of the inputs, and all the inputs of the outputs, in a field called \code{ref}}

\item{...}{To be passed to getConnectionTable}
}
\value{
An object of class \strong{neuronBag}. The object is a list with fields:
\describe{
 \item{names}{A table of metadata associated with the neurons in the bag -- with an extra column, 'databaseType'
which keeps the type name used in the database.}
 \item{outputs}{A type to type connectivity table of the outputs of the set of neurons.}
 \item{inputs}{A type to type connectivity table of the inputs of the set of neurons.}
 \item{outputs_raw}{A neuron to neuron connection table of the outputs of the set of neurons.}
 \item{inputs_raw}{A neuron to neuron connection table of the inputs of the set of neurons.}
 \item{outputsTableRef}{A table holding all instances of all the output types and their associated metadata}
}
}
\description{
Builds a neuronBag object either from a vector of query strings or a metadata \code{data.frame}.
}
\details{
A \strong{neuronBag} carries information about input and output connectivity of a group of neurons,
 at the neuron and type level, while keeping track of eventual type changes that occured. Particularly useful in combination 
 with retyping functions. Methods exist for filtering (\code{filter}), concatenating (\code{c}) and all retyping utilities.
}
\seealso{
\code{\link{lateralize_types}}, \code{\link{cxRetyping}}, \code{\link{redefine_types}} for retyping a bag.
}
